
 Composing de Reducers:

 Un reduce puede ejecutar otro Reduce.

 export const skiDay = (state = null, action) =>
	(action.type === C.ADD_DAY) ?
		action.payload :
		state

 export const allSkiDays = (state = [], action) => {
	switch(action.type) {
		case C.ADD_DAY :
			const hasDay = state.some(skiDay => skiDay.date === action.payload.date)
			return (hasDay) ?
				state: [
					...state, 
					skiDay(action.payload, action)
				].sort((a,b) => new Date(b.date) - new Date(a.date))
		case C.REMOVE_DAY : 
			return state.filter(skiDay => skiDay.date !== action.payload)
		default:
			return state
		
	}
 }

 - MUY INTERESANTE EL USO DE some().
 - DENTRO DEL REDUCER allSkiDays se llama a otro reduce llamado skiDay()